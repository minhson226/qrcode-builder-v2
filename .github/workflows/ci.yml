name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install backend dependencies
      run: |
        cd backend
        pip install -r requirements.txt
    
    - name: Run backend tests
      run: |
        cd backend
        python -m pytest tests/ -v

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --run

  docker-build:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build backend Docker image
      run: |
        cd backend
        docker build -t qrcode-backend .
    
    - name: Build frontend Docker image
      run: |
        cd frontend
        docker build -t qrcode-frontend .

  integration-test:
    runs-on: ubuntu-latest
    needs: [docker-build]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Start services with docker-compose
      run: |
        docker-compose up -d backend
        sleep 10  # Wait for backend to start
    
    - name: Run integration tests
      run: |
        # Test health endpoint
        curl -f http://localhost:8000/health || exit 1
        
        # Test QR creation
        response=$(curl -s -X POST http://localhost:8000/qr \
          -H "Content-Type: application/json" \
          -d '{"type": "static", "content": "https://example.com"}')
        
        if echo "$response" | grep -q '"id"'; then
          echo "QR creation test passed"
        else
          echo "QR creation test failed"
          exit 1
        fi
    
    - name: Stop services
      run: docker-compose down